/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Start.java
 *
 * Created on Nov 8, 2010, 12:00:58 AM
 */

package dataaquisitionsystem;

import gnu.io.CommPort;
import gnu.io.CommPortIdentifier;
import gnu.io.PortInUseException;
import gnu.io.SerialPort;
import gnu.io.SerialPortEvent;
import gnu.io.SerialPortEventListener;
import gnu.io.UnsupportedCommOperationException;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.text.DecimalFormat;
import java.util.TooManyListenersException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Chirag
 */
public class Start extends javax.swing.JPanel implements SerialPortEventListener
{

    protected InputStream inputStream;
    public static final int TIMEOUTSECONDS=30;
    public static int BAUD;
    protected String response;
    protected CommPortIdentifier selectedPortIdentifier;
    protected SerialPort serialPort;
    DecimalFormat df=new DecimalFormat("#.#########");
    DecimalFormat df1=new DecimalFormat("####E0");
    boolean start=false;
    boolean first=true;
    long startTime;
    long currTime;
    double[] x=new double[100000];
    double[] y=new double[100000];
    int length=0;
    String cols[]={"Time","Integer","Character","Hex","Multiplier"};
    DefaultTableModel model = new DefaultTableModel(null,cols);
    boolean threadStop=false;
    Draw d;
    //Draw1 d1;
    /** Creates new form Start */
    public Start(String name ,CommPortIdentifier sPI,int baud) {
        selectedPortIdentifier = sPI;
        BAUD =baud;
        initComponents();
        this.setName(name);
        try
        {
            serialPort=(SerialPort) selectedPortIdentifier.open(name + "open", TIMEOUTSECONDS * 1000);
        }
        catch (PortInUseException ex)
        {
            Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
        }
        try
        {
	    inputStream = serialPort.getInputStream();
	}
        catch (IOException e) {}

	try
        {
	    serialPort.addEventListener(this);
	}
        catch (TooManyListenersException e) {}

	//serialPort.notifyOnDataAvailable(true);
        serialPort.notifyOnDataAvailable(true);

	try
        {
            serialPort.setSerialPortParams(BAUD, SerialPort.DATABITS_8,SerialPort.STOPBITS_1,SerialPort.PARITY_NONE);
	}
        catch (UnsupportedCommOperationException e) {}
        jTableOutput.setModel(model);
        jTableOutput.setColumnSelectionAllowed(true);
        jTableOutput.setCellSelectionEnabled(true);
	jButtonDel.setText("Delete");
        jButtonRowSelect.setText("   Row  ");
        jLabel2.setText("Selection Tool");
        jButtonColumnSelect.setText(" Column ");
        run();

}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckInt = new javax.swing.JCheckBox();
        jCheckChar = new javax.swing.JCheckBox();
        jCheckHex = new javax.swing.JCheckBox();
        jCheckTime = new javax.swing.JCheckBox();
        jTextMul = new javax.swing.JTextField();
        jCheckMul = new javax.swing.JCheckBox();
        jButtonStart = new javax.swing.JButton();
        jButtonStop = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jLabelTime = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableOutput = new javax.swing.JTable();
        jGraph = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButtonDel = new javax.swing.JButton();
        jButtonRowSelect = new javax.swing.JButton();
        jButtonColumnSelect = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(dataaquisitionsystem.DataAquisitionSystemApp.class).getContext().getResourceMap(Start.class);
        jClose.setIcon(resourceMap.getIcon("jClose.icon")); // NOI18N
        jClose.setMaximumSize(new java.awt.Dimension(23, 23));
        jClose.setMinimumSize(new java.awt.Dimension(23, 23));
        jClose.setName("jClose"); // NOI18N
        jClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCloseMouseClicked(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jCheckInt.setText(resourceMap.getString("jCheckInt.text")); // NOI18N
        jCheckInt.setName("jCheckInt"); // NOI18N

        jCheckChar.setText(resourceMap.getString("jCheckChar.text")); // NOI18N
        jCheckChar.setName("jCheckChar"); // NOI18N

        jCheckHex.setText(resourceMap.getString("jCheckHex.text")); // NOI18N
        jCheckHex.setName("jCheckHex"); // NOI18N

        jCheckTime.setText(resourceMap.getString("jCheckTime.text")); // NOI18N
        jCheckTime.setName("jCheckTime"); // NOI18N

        jTextMul.setText(resourceMap.getString("jTextMul.text")); // NOI18N
        jTextMul.setName("jTextMul"); // NOI18N

        jCheckMul.setText(resourceMap.getString("jCheckMul.text")); // NOI18N
        jCheckMul.setName("jCheckMul"); // NOI18N

        jButtonStart.setText(resourceMap.getString("jButtonStart.text")); // NOI18N
        jButtonStart.setName("jButtonStart"); // NOI18N
        jButtonStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonStartMouseClicked(evt);
            }
        });

        jButtonStop.setText(resourceMap.getString("jButtonStop.text")); // NOI18N
        jButtonStop.setEnabled(false);
        jButtonStop.setName("jButtonStop"); // NOI18N
        jButtonStop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonStopMouseClicked(evt);
            }
        });

        jButtonClear.setText(resourceMap.getString("jButtonClear.text")); // NOI18N
        jButtonClear.setEnabled(false);
        jButtonClear.setName("jButtonClear"); // NOI18N
        jButtonClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClearMouseClicked(evt);
            }
        });

        jLabelTime.setText(resourceMap.getString("jLabelTime.text")); // NOI18N
        jLabelTime.setName("jLabelTime"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTableOutput.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time", "Integer", "Character", "Hex", "Multiplier"
            }
        ));
        jTableOutput.setName("jTableOutput"); // NOI18N
        jScrollPane2.setViewportView(jTableOutput);
        jTableOutput.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTableOutput.columnModel.title0")); // NOI18N
        jTableOutput.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jTableOutput.columnModel.title1")); // NOI18N
        jTableOutput.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("jTableOutput.columnModel.title2")); // NOI18N
        jTableOutput.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("jTableOutput.columnModel.title3")); // NOI18N
        jTableOutput.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("jTableOutput.columnModel.title4")); // NOI18N

        jGraph.setText(resourceMap.getString("jGraph.text")); // NOI18N
        jGraph.setName("jGraph"); // NOI18N
        jGraph.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jGraphMouseClicked(evt);
            }
        });

        jPanel1.setName("jPanel1"); // NOI18N

        jButtonDel.setText(resourceMap.getString("jButtonDel.text")); // NOI18N
        jButtonDel.setEnabled(false);
        jButtonDel.setName("jButtonDel"); // NOI18N
        jButtonDel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDelMouseClicked(evt);
            }
        });

        jButtonRowSelect.setText(resourceMap.getString("jButtonRowSelect.text")); // NOI18N
        jButtonRowSelect.setMaximumSize(new java.awt.Dimension(85, 23));
        jButtonRowSelect.setMinimumSize(new java.awt.Dimension(85, 23));
        jButtonRowSelect.setName("jButtonRowSelect"); // NOI18N
        jButtonRowSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRowSelectMouseClicked(evt);
            }
        });

        jButtonColumnSelect.setText(resourceMap.getString("jButtonColumnSelect.text")); // NOI18N
        jButtonColumnSelect.setMaximumSize(new java.awt.Dimension(99, 23));
        jButtonColumnSelect.setMinimumSize(new java.awt.Dimension(99, 23));
        jButtonColumnSelect.setName("jButtonColumnSelect"); // NOI18N
        jButtonColumnSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonColumnSelectMouseClicked(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonDel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRowSelect, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonColumnSelect, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRowSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonColumnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(jButtonDel)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(402, 402, 402)
                .addComponent(jLabelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(471, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(283, 283, 283))
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckTime)
                    .addComponent(jButtonStart))
                .addGap(47, 47, 47)
                .addComponent(jCheckInt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonStop)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckChar)
                                .addGap(33, 33, 33)
                                .addComponent(jCheckHex)
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jGraph)
                                            .addComponent(jButtonClear)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jCheckMul)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextMul, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(435, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(1060, Short.MAX_VALUE)
                .addComponent(jClose, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonStart)
                            .addComponent(jButtonStop))
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckHex)
                            .addComponent(jCheckTime)
                            .addComponent(jCheckInt)
                            .addComponent(jCheckChar)
                            .addComponent(jCheckMul)
                            .addComponent(jTextMul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonClear)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelTime)
                        .addGap(38, 38, 38)
                        .addComponent(jGraph))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jClose, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(372, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCloseMouseClicked
        System.out.println("active= "+Thread.activeCount());
        Runtime r=Runtime.getRuntime();
        System.out.println(r.freeMemory());
        r.gc();
        System.out.println(r.freeMemory());
        threadStop=true;
        serialPort.close();
        removeAll();
        repaint();// TODO add your handling code here:
        this.getParent().remove(this);
        System.out.println("active= "+Thread.activeCount());
        
        //        this.getParent().repaint();
}//GEN-LAST:event_jCloseMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        JFrame mainFrame = DataAquisitionSystemApp.getApplication().getMainFrame();
        mainFrame.setExtendedState(mainFrame.MAXIMIZED_BOTH);        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void jButtonStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonStartMouseClicked
        start=true;
        System.out.println("start=true");
        jButtonStop.setEnabled(true);
        jButtonClear.setEnabled(false);
        jButtonStart.setEnabled(false);
        
    }//GEN-LAST:event_jButtonStartMouseClicked

    private void jButtonStopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonStopMouseClicked
        start=false;
        jButtonStop.setEnabled(false);
        jButtonClear.setEnabled(true);
        jButtonStart.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonStopMouseClicked

    private void jButtonClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClearMouseClicked
        model=new DefaultTableModel(null,cols);
        jTableOutput.setModel(model);
        first=true;
    }//GEN-LAST:event_jButtonClearMouseClicked

    private void jGraphMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jGraphMouseClicked
        JFrame mainFrame = DataAquisitionSystemApp.getApplication().getMainFrame();
        System.out.println("   Main Frame "+ mainFrame);
        d=new Draw(jTableOutput);
        //d1=new Draw1(jTableOutput);
        Plot p=new Plot(mainFrame,d);
                // TODO add your handling code here:
    }//GEN-LAST:event_jGraphMouseClicked

    private void jButtonDelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDelMouseClicked
        int r[]=jTableOutput.getSelectedRows();
        int cnt=0;
        while(cnt<r.length)
          model.removeRow(r[cnt++]);  // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDelMouseClicked

    private void jButtonRowSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRowSelectMouseClicked
         jButtonDel.setEnabled(true);
         jTableOutput.setCellSelectionEnabled(false);
         jTableOutput.setRowSelectionAllowed(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButtonRowSelectMouseClicked

    private void jButtonColumnSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonColumnSelectMouseClicked
         jButtonDel.setEnabled(false);
         jTableOutput.setCellSelectionEnabled(false);
         jTableOutput.setColumnSelectionAllowed(true);// TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonColumnSelectMouseClicked

     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonColumnSelect;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonRowSelect;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JButton jButtonStop;
    private javax.swing.JCheckBox jCheckChar;
    private javax.swing.JCheckBox jCheckHex;
    private javax.swing.JCheckBox jCheckInt;
    private javax.swing.JCheckBox jCheckMul;
    private javax.swing.JCheckBox jCheckTime;
    private javax.swing.JButton jClose;
    private javax.swing.JButton jGraph;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableOutput;
    private javax.swing.JTextField jTextMul;
    // End of variables declaration//GEN-END:variables
    int i=0;
    public void run()
    {
        System.out.println("Thread is running");
        Thread p=new Thread()
        {
            
            @Override
            public void run()
            {
                while(!threadStop)
                {
                   // System.out.println("in while loop; i=" +i+ "length="+length+ "start="+start);
                    try {
                        Thread.sleep(0,1);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(i<length)
                    {
                        
                        if(start)
                        {
                            try
                            {
                                d.updateTable(jTableOutput);
                                System.out.println("In here!");
                                //d1.updateTable();
                                if(d.maxY<y[i])
                                {
                                    d.maxY=y[i];
                                    d.maxYchanged=true;
                                    d.update();
                                }
                            }
                            catch(Exception e){};
                            model.insertRow(0,new Object[]{null});
                             if(jCheckTime.isSelected())
                                jTableOutput.setValueAt(df.format((double)(x[i]-startTime)/1000000000),0,0 );
                             if(jCheckInt.isSelected())
                                jTableOutput.setValueAt(Integer.toString((int)y[i]),0,1 );
                             //System.out.println(y[i]);
                             if(jCheckChar.isSelected())
                                jTableOutput.setValueAt(Character.toString((char)(int)y[i]),0,2 );
                             if(jCheckHex.isSelected())
                                jTableOutput.setValueAt(Integer.toHexString((int)y[i]),0,3 );
                             if(jCheckMul.isSelected())
                                jTableOutput.setValueAt(df.format((double)(y[i]*Double.parseDouble(jTextMul.getText()))),0,4 );
                                i++;
                        }
//                        System.out.println("j"+jTableOutput.getValueAt(i,1));
                    }
                }
                
            }
        };
        p.start();

    }

    public void serialEvent(SerialPortEvent event)
    {
        if(first && start)
        {
            first=false;
            startTime=System.nanoTime();
        }
        switch (event.getEventType())
        {
	case SerialPortEvent.BI:
	case SerialPortEvent.OE:
	case SerialPortEvent.FE:
	case SerialPortEvent.PE:
	case SerialPortEvent.CD:
	case SerialPortEvent.CTS:
	case SerialPortEvent.DSR:
	case SerialPortEvent.RI:
	case SerialPortEvent.OUTPUT_BUFFER_EMPTY:
        break;
	case SerialPortEvent.DATA_AVAILABLE:
        byte[] readBuffer = new byte[1];
        try
        {
                while (inputStream.available() > 0)
                {
	        int numBytes = inputStream.read(readBuffer);
                String in=new String(readBuffer);
                int z=(char)in.charAt(0);
                z=(readBuffer[0] & 0xff);
                //System.out.println(z);
                if(start)
                {
                    //System.out.println("i="+i+"Length="+length+"start="+start);
                    jLabelTime.setText("Time Interval: "+df1.format((double)(System.nanoTime()-currTime)/1000000000)+"  sec");
                    length++;
                    currTime=System.nanoTime();
                    x[length-1]=currTime;
                    y[length-1]=z;
                    //length++;
                }
                      
            }
                
		
        }
        catch (IOException e)
        {
            System.out.println("error");
        }
	break;
	}

    }

}
