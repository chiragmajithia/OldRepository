/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on Apr 2, 2012, 12:28:34 AM
 */

package serialcomm;

import gnu.io.CommPortIdentifier;
import java.util.Enumeration;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chirag
 */
public class Main extends javax.swing.JFrame implements Runnable {

    static SimpleRead reader ;
    static CommPortIdentifier portId;
    static Enumeration portList;
    static String cols[]={"Time","Voltage","Current"};
    static DefaultTableModel model = new DefaultTableModel(null,cols);
    static Thread  populateTable;

    /** Creates new form Main */
    public Main() 
    {

        initComponents();
        boolean portFound = false;
        String defaultPort = "COM4";
	portList = CommPortIdentifier.getPortIdentifiers();
	while (portList.hasMoreElements())
        {
	    portId = (CommPortIdentifier) portList.nextElement();
	    if (portId.getPortType() == CommPortIdentifier.PORT_SERIAL) {
		if (portId.getName().equals(defaultPort)) {
		    System.out.println("Found port: "+defaultPort);
		    portFound = true;
		    reader = new SimpleRead(portId);
		}
	    }
	}
	if (!portFound)
        {
	    System.out.println("port " + defaultPort + " not found.");
	}
        populateTable = new Thread(this);
       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(model);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
                 populateTable.start();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void run() {
       while(true)
       {
           if(reader.data_fetched)
                {
                       reader.data_fetched=false;
                       model.insertRow(0,new Object[]{null});
                       jTable1.setValueAt(reader.fetchVoltage(), 0, 1);
                       jTable1.setValueAt(reader.fetchCurrent(), 0, 2);

                }
        }

    }

}


